classdef NeplanServiceLoadGenerationInfo < matlab.wsdl.internal.WsdlObject
    % NeplanServiceLoadGenerationInfo(P,Q,Unit,elementname,elementtype,elemid)  NeplanServiceLoadGenerationInfo object for use with <a href="matlab:doc NeplanService">NeplanService</a> web client
    %
    %     P - numeric scalar (XML double)
    %     Q - numeric scalar (XML double)
    %     Unit - numeric scalar (XML short)
    %     elementname - string
    %     elementtype - string
    %     elemid - string
    %
    % To create a NeplanServiceLoadGenerationInfo, use <a href="matlab:doc NeplanService.getNeplanServiceLoadGenerationInfo">NeplanService.getNeplanServiceLoadGenerationInfo</a>.
    %
    %
    % See also <a href="matlab:doc NeplanService">NeplanService</a>.
    
    % This file generated by matlab.wsdl.createWSDLClient at 07-Jan-2018 16:39:55
    % from https://demo.neplan.ch/NEPLAN360_Demo/Services/External/NeplanService.svc?singleWsdl.  
    % Please do not alter this file.
    properties 
        P
        Q
        Unit
        elementname
        elementtype
        elemid
    end
    
    methods
        function obj = NeplanServiceLoadGenerationInfo(P,Q,Unit,elementname,elementtype,elemid)
            if nargin == 0, return, end
            if nargin > 0
                obj.P = P;
            end
            if nargin > 1
                obj.Q = Q;
            end
            if nargin > 2
                obj.Unit = Unit;
            end
            if nargin > 3
                obj.elementname = elementname;
            end
            if nargin > 4
                obj.elementtype = elementtype;
            end
            if nargin > 5
                obj.elemid = elemid;
            end
        end
        function obj = set.P(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','P'},value,'double',true,false);
            obj.P = value;
        end        

        function obj = set.Q(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','Q'},value,'double',true,false);
            obj.Q = value;
        end        

        function obj = set.Unit(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','Unit'},value,'short',true,false);
            obj.Unit = value;
        end        

        function obj = set.elementname(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','elementname'},value,'string',true,false);
            obj.elementname = value;
        end        

        function obj = set.elementtype(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','elementtype'},value,'string',true,false);
            obj.elementtype = value;
        end        

        function obj = set.elemid(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceLoadGenerationInfo','elemid'},value,'string',true,false);
            obj.elemid = value;
        end
    end

    methods (Hidden, Access = {?matlab.wsdl.internal.WsdlObject,?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function validate(obj)
        % Test for required fields
            arrayfun(@(x) x.checkFields({},{},{}), obj);
        end
    end

    methods (Hidden, Access = protected)
        function jobj = getOneObj(obj)
        % Return the Java object corresponding to this object.  Intended
        % to be invoked from superclass.
            obj.validate
            import matlab.wsdl.internal.fromMATLAB
            jobj = neplanservice.NeplanServiceLoadGenerationInfo;  % create empty Java object
            % populate fields of object
            jobj.setP(fromMATLAB({'NeplanServiceLoadGenerationInfo','P'},obj.P,'double',true));
            jobj.setQ(fromMATLAB({'NeplanServiceLoadGenerationInfo','Q'},obj.Q,'double',true));
            jobj.setUnit(fromMATLAB({'NeplanServiceLoadGenerationInfo','Unit'},obj.Unit,'short',true));
            jobj.setElementname(fromMATLAB({'NeplanServiceLoadGenerationInfo','elementname'},obj.elementname,'string',true));
            jobj.setElementtype(fromMATLAB({'NeplanServiceLoadGenerationInfo','elementtype'},obj.elementtype,'string',true));
            jobj.setElemid(fromMATLAB({'NeplanServiceLoadGenerationInfo','elemid'},obj.elemid,'string',true));
        end
    end

    methods (Static, Hidden, Access = {?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function obj = getInstance(jobj, isArray) 
        % Return a NeplanServiceLoadGenerationInfo object constructed from the Java object jobj.
        % If isArray, jobj is java.util.List of objects and we'll return array.
            if nargin == 0 || isempty(jobj)
                obj = [];
                return
            end
            if nargin > 1 && isArray
                for i = jobj.size : -1 : 1
                    value = wsdl.neplanservice.NeplanServiceLoadGenerationInfo.getInstance(jobj.get(i-1));
                    if ~isempty(value) 
                        obj(i,1) = value;
                    end
                end
                if ~exist('obj','var')
                    obj = [];
                end
            else
                import matlab.wsdl.internal.toMATLAB
                obj = wsdl.neplanservice.NeplanServiceLoadGenerationInfo( ...
                    toMATLAB(jobj.getP,'double',false), ...
                    toMATLAB(jobj.getQ,'double',false), ...
                    toMATLAB(jobj.getUnit,'short',false), ...
                    toMATLAB(jobj.getElementname,'string',false), ...
                    toMATLAB(jobj.getElementtype,'string',false), ...
                    toMATLAB(jobj.getElemid,'string',false));
            end
        end
    end
end
