classdef LineSectionData < matlab.wsdl.internal.WsdlObject
    % LineSectionData(CableOrOHL,Description,Diameter,InstallationYear,Layout,Length,LibraryType,Material,Name)  LineSectionData object for use with <a href="matlab:doc NeplanService">NeplanService</a> web client
    %
    %     CableOrOHL - numeric scalar (XML short)
    %     Description - string
    %     Diameter - numeric scalar (XML double)
    %     InstallationYear - numeric scalar (XML int)
    %     Layout - numeric scalar (XML short)
    %     Length - numeric scalar (XML double)
    %     LibraryType - string
    %     Material - numeric scalar (XML short)
    %     Name - string
    %
    % To create a LineSectionData, use <a href="matlab:doc NeplanService.getLineSectionData">NeplanService.getLineSectionData</a>.
    %
    %
    % See also <a href="matlab:doc NeplanService">NeplanService</a>.
    
    % This file generated by matlab.wsdl.createWSDLClient at 07-Jan-2018 16:39:55
    % from https://demo.neplan.ch/NEPLAN360_Demo/Services/External/NeplanService.svc?singleWsdl.  
    % Please do not alter this file.
    properties 
        CableOrOHL
        Description
        Diameter
        InstallationYear
        Layout
        Length
        LibraryType
        Material
        Name
    end
    
    methods
        function obj = LineSectionData(CableOrOHL,Description,Diameter,InstallationYear,Layout,Length,LibraryType,Material,Name)
            if nargin == 0, return, end
            if nargin > 0
                obj.CableOrOHL = CableOrOHL;
            end
            if nargin > 1
                obj.Description = Description;
            end
            if nargin > 2
                obj.Diameter = Diameter;
            end
            if nargin > 3
                obj.InstallationYear = InstallationYear;
            end
            if nargin > 4
                obj.Layout = Layout;
            end
            if nargin > 5
                obj.Length = Length;
            end
            if nargin > 6
                obj.LibraryType = LibraryType;
            end
            if nargin > 7
                obj.Material = Material;
            end
            if nargin > 8
                obj.Name = Name;
            end
        end
        function obj = set.CableOrOHL(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','CableOrOHL'},value,'short',true,false);
            obj.CableOrOHL = value;
        end        

        function obj = set.Description(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Description'},value,'string',true,false);
            obj.Description = value;
        end        

        function obj = set.Diameter(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Diameter'},value,'double',true,false);
            obj.Diameter = value;
        end        

        function obj = set.InstallationYear(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','InstallationYear'},value,'int',true,false);
            obj.InstallationYear = value;
        end        

        function obj = set.Layout(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Layout'},value,'short',true,false);
            obj.Layout = value;
        end        

        function obj = set.Length(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Length'},value,'double',true,false);
            obj.Length = value;
        end        

        function obj = set.LibraryType(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','LibraryType'},value,'string',true,false);
            obj.LibraryType = value;
        end        

        function obj = set.Material(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Material'},value,'short',true,false);
            obj.Material = value;
        end        

        function obj = set.Name(obj, value)
            matlab.wsdl.internal.fromMATLAB({'LineSectionData','Name'},value,'string',true,false);
            obj.Name = value;
        end
    end

    methods (Hidden, Access = {?matlab.wsdl.internal.WsdlObject,?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function validate(obj)
        % Test for required fields
            arrayfun(@(x) x.checkFields({},{},{}), obj);
        end
    end

    methods (Hidden, Access = protected)
        function jobj = getOneObj(obj)
        % Return the Java object corresponding to this object.  Intended
        % to be invoked from superclass.
            obj.validate
            import matlab.wsdl.internal.fromMATLAB
            jobj = neplanservice.LineSectionData;  % create empty Java object
            % populate fields of object
            jobj.setCableOrOHL(fromMATLAB({'LineSectionData','CableOrOHL'},obj.CableOrOHL,'short',true));
            jobj.setDescription(fromMATLAB({'LineSectionData','Description'},obj.Description,'string',true));
            jobj.setDiameter(fromMATLAB({'LineSectionData','Diameter'},obj.Diameter,'double',true));
            jobj.setInstallationYear(fromMATLAB({'LineSectionData','InstallationYear'},obj.InstallationYear,'int',true));
            jobj.setLayout(fromMATLAB({'LineSectionData','Layout'},obj.Layout,'short',true));
            jobj.setLength(fromMATLAB({'LineSectionData','Length'},obj.Length,'double',true));
            jobj.setLibraryType(fromMATLAB({'LineSectionData','LibraryType'},obj.LibraryType,'string',true));
            jobj.setMaterial(fromMATLAB({'LineSectionData','Material'},obj.Material,'short',true));
            jobj.setName(fromMATLAB({'LineSectionData','Name'},obj.Name,'string',true));
        end
    end

    methods (Static, Hidden, Access = {?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function obj = getInstance(jobj, isArray) 
        % Return a LineSectionData object constructed from the Java object jobj.
        % If isArray, jobj is java.util.List of objects and we'll return array.
            if nargin == 0 || isempty(jobj)
                obj = [];
                return
            end
            if nargin > 1 && isArray
                for i = jobj.size : -1 : 1
                    value = wsdl.neplanservice.LineSectionData.getInstance(jobj.get(i-1));
                    if ~isempty(value) 
                        obj(i,1) = value;
                    end
                end
                if ~exist('obj','var')
                    obj = [];
                end
            else
                import matlab.wsdl.internal.toMATLAB
                obj = wsdl.neplanservice.LineSectionData( ...
                    toMATLAB(jobj.getCableOrOHL,'short',false), ...
                    toMATLAB(jobj.getDescription,'string',false), ...
                    toMATLAB(jobj.getDiameter,'double',false), ...
                    toMATLAB(jobj.getInstallationYear,'int',false), ...
                    toMATLAB(jobj.getLayout,'short',false), ...
                    toMATLAB(jobj.getLength,'double',false), ...
                    toMATLAB(jobj.getLibraryType,'string',false), ...
                    toMATLAB(jobj.getMaterial,'short',false), ...
                    toMATLAB(jobj.getName,'string',false));
            end
        end
    end
end
