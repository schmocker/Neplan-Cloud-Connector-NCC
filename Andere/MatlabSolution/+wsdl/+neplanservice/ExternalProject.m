classdef ExternalProject < matlab.wsdl.internal.WsdlObject
    % ExternalProject(AngleXY,AreaID,CalcNameID,CoordinateUnits,DiagramID,DirectionUpY,FactorXY,GraphicLayerID,GroupID,ImportWithGraphic,Info,LayerMinX,LayerMinY,LayerUnitXY,LibraryName,LibrarySubname,LogName,NumDiagram,NumGraphic,ProjectID,ProjectName,ReturnCode,SridID,SubAreaID,VariantID,Version,WorldCoordMaxX,WorldCoordMaxY,WorldCoordMinX,WorldCoordMinY,ZoneID)  ExternalProject object for use with <a href="matlab:doc NeplanService">NeplanService</a> web client
    %
    %     AngleXY - numeric scalar (XML double)
    %     AreaID - string
    %     CalcNameID - string
    %     CoordinateUnits - numeric scalar (XML int)
    %     DiagramID - string
    %     DirectionUpY - logical or numeric scalar (XML boolean)
    %     FactorXY - numeric scalar (XML double)
    %     GraphicLayerID - string
    %     GroupID - string
    %     ImportWithGraphic - logical or numeric scalar (XML boolean)
    %     Info - string
    %     LayerMinX - numeric scalar (XML double)
    %     LayerMinY - numeric scalar (XML double)
    %     LayerUnitXY - numeric scalar (XML short)
    %     LibraryName - string
    %     LibrarySubname - string
    %     LogName - string
    %     NumDiagram - numeric scalar (XML int)
    %     NumGraphic - numeric scalar (XML int)
    %     ProjectID - string
    %     ProjectName - string
    %     ReturnCode - numeric scalar (XML int)
    %     SridID - string
    %     SubAreaID - string
    %     VariantID - string
    %     Version - numeric scalar (XML double)
    %     WorldCoordMaxX - numeric scalar (XML double)
    %     WorldCoordMaxY - numeric scalar (XML double)
    %     WorldCoordMinX - numeric scalar (XML double)
    %     WorldCoordMinY - numeric scalar (XML double)
    %     ZoneID - string
    %
    % To create a ExternalProject, use <a href="matlab:doc NeplanService.getExternalProject">NeplanService.getExternalProject</a>.
    %
    %
    % See also <a href="matlab:doc NeplanService">NeplanService</a>.
    
    % This file generated by matlab.wsdl.createWSDLClient at 07-Jan-2018 16:39:55
    % from https://demo.neplan.ch/NEPLAN360_Demo/Services/External/NeplanService.svc?singleWsdl.  
    % Please do not alter this file.
    properties 
        AngleXY
        AreaID
        CalcNameID
        CoordinateUnits
        DiagramID
        DirectionUpY
        FactorXY
        GraphicLayerID
        GroupID
        ImportWithGraphic
        Info
        LayerMinX
        LayerMinY
        LayerUnitXY
        LibraryName
        LibrarySubname
        LogName
        NumDiagram
        NumGraphic
        ProjectID
        ProjectName
        ReturnCode
        SridID
        SubAreaID
        VariantID
        Version
        WorldCoordMaxX
        WorldCoordMaxY
        WorldCoordMinX
        WorldCoordMinY
        ZoneID
    end
    
    methods
        function obj = ExternalProject(AngleXY,AreaID,CalcNameID,CoordinateUnits,DiagramID,DirectionUpY,FactorXY,GraphicLayerID,GroupID,ImportWithGraphic,Info,LayerMinX,LayerMinY,LayerUnitXY,LibraryName,LibrarySubname,LogName,NumDiagram,NumGraphic,ProjectID,ProjectName,ReturnCode,SridID,SubAreaID,VariantID,Version,WorldCoordMaxX,WorldCoordMaxY,WorldCoordMinX,WorldCoordMinY,ZoneID)
            if nargin == 0, return, end
            if nargin > 0
                obj.AngleXY = AngleXY;
            end
            if nargin > 1
                obj.AreaID = AreaID;
            end
            if nargin > 2
                obj.CalcNameID = CalcNameID;
            end
            if nargin > 3
                obj.CoordinateUnits = CoordinateUnits;
            end
            if nargin > 4
                obj.DiagramID = DiagramID;
            end
            if nargin > 5
                obj.DirectionUpY = DirectionUpY;
            end
            if nargin > 6
                obj.FactorXY = FactorXY;
            end
            if nargin > 7
                obj.GraphicLayerID = GraphicLayerID;
            end
            if nargin > 8
                obj.GroupID = GroupID;
            end
            if nargin > 9
                obj.ImportWithGraphic = ImportWithGraphic;
            end
            if nargin > 10
                obj.Info = Info;
            end
            if nargin > 11
                obj.LayerMinX = LayerMinX;
            end
            if nargin > 12
                obj.LayerMinY = LayerMinY;
            end
            if nargin > 13
                obj.LayerUnitXY = LayerUnitXY;
            end
            if nargin > 14
                obj.LibraryName = LibraryName;
            end
            if nargin > 15
                obj.LibrarySubname = LibrarySubname;
            end
            if nargin > 16
                obj.LogName = LogName;
            end
            if nargin > 17
                obj.NumDiagram = NumDiagram;
            end
            if nargin > 18
                obj.NumGraphic = NumGraphic;
            end
            if nargin > 19
                obj.ProjectID = ProjectID;
            end
            if nargin > 20
                obj.ProjectName = ProjectName;
            end
            if nargin > 21
                obj.ReturnCode = ReturnCode;
            end
            if nargin > 22
                obj.SridID = SridID;
            end
            if nargin > 23
                obj.SubAreaID = SubAreaID;
            end
            if nargin > 24
                obj.VariantID = VariantID;
            end
            if nargin > 25
                obj.Version = Version;
            end
            if nargin > 26
                obj.WorldCoordMaxX = WorldCoordMaxX;
            end
            if nargin > 27
                obj.WorldCoordMaxY = WorldCoordMaxY;
            end
            if nargin > 28
                obj.WorldCoordMinX = WorldCoordMinX;
            end
            if nargin > 29
                obj.WorldCoordMinY = WorldCoordMinY;
            end
            if nargin > 30
                obj.ZoneID = ZoneID;
            end
        end
        function obj = set.AngleXY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','AngleXY'},value,'double',true,false);
            obj.AngleXY = value;
        end        

        function obj = set.AreaID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','AreaID'},value,'string',true,false);
            obj.AreaID = value;
        end        

        function obj = set.CalcNameID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','CalcNameID'},value,'string',true,false);
            obj.CalcNameID = value;
        end        

        function obj = set.CoordinateUnits(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','CoordinateUnits'},value,'int',true,false);
            obj.CoordinateUnits = value;
        end        

        function obj = set.DiagramID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','DiagramID'},value,'string',true,false);
            obj.DiagramID = value;
        end        

        function obj = set.DirectionUpY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','DirectionUpY'},value,'boolean',true,false);
            obj.DirectionUpY = value;
        end        

        function obj = set.FactorXY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','FactorXY'},value,'double',true,false);
            obj.FactorXY = value;
        end        

        function obj = set.GraphicLayerID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','GraphicLayerID'},value,'string',true,false);
            obj.GraphicLayerID = value;
        end        

        function obj = set.GroupID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','GroupID'},value,'string',true,false);
            obj.GroupID = value;
        end        

        function obj = set.ImportWithGraphic(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','ImportWithGraphic'},value,'boolean',true,false);
            obj.ImportWithGraphic = value;
        end        

        function obj = set.Info(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','Info'},value,'string',true,false);
            obj.Info = value;
        end        

        function obj = set.LayerMinX(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LayerMinX'},value,'double',true,false);
            obj.LayerMinX = value;
        end        

        function obj = set.LayerMinY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LayerMinY'},value,'double',true,false);
            obj.LayerMinY = value;
        end        

        function obj = set.LayerUnitXY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LayerUnitXY'},value,'short',true,false);
            obj.LayerUnitXY = value;
        end        

        function obj = set.LibraryName(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LibraryName'},value,'string',true,false);
            obj.LibraryName = value;
        end        

        function obj = set.LibrarySubname(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LibrarySubname'},value,'string',true,false);
            obj.LibrarySubname = value;
        end        

        function obj = set.LogName(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','LogName'},value,'string',true,false);
            obj.LogName = value;
        end        

        function obj = set.NumDiagram(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','NumDiagram'},value,'int',true,false);
            obj.NumDiagram = value;
        end        

        function obj = set.NumGraphic(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','NumGraphic'},value,'int',true,false);
            obj.NumGraphic = value;
        end        

        function obj = set.ProjectID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','ProjectID'},value,'string',true,false);
            obj.ProjectID = value;
        end        

        function obj = set.ProjectName(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','ProjectName'},value,'string',true,false);
            obj.ProjectName = value;
        end        

        function obj = set.ReturnCode(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','ReturnCode'},value,'int',true,false);
            obj.ReturnCode = value;
        end        

        function obj = set.SridID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','SridID'},value,'string',true,false);
            obj.SridID = value;
        end        

        function obj = set.SubAreaID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','SubAreaID'},value,'string',true,false);
            obj.SubAreaID = value;
        end        

        function obj = set.VariantID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','VariantID'},value,'string',true,false);
            obj.VariantID = value;
        end        

        function obj = set.Version(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','Version'},value,'double',true,false);
            obj.Version = value;
        end        

        function obj = set.WorldCoordMaxX(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','WorldCoordMaxX'},value,'double',true,false);
            obj.WorldCoordMaxX = value;
        end        

        function obj = set.WorldCoordMaxY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','WorldCoordMaxY'},value,'double',true,false);
            obj.WorldCoordMaxY = value;
        end        

        function obj = set.WorldCoordMinX(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','WorldCoordMinX'},value,'double',true,false);
            obj.WorldCoordMinX = value;
        end        

        function obj = set.WorldCoordMinY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','WorldCoordMinY'},value,'double',true,false);
            obj.WorldCoordMinY = value;
        end        

        function obj = set.ZoneID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'ExternalProject','ZoneID'},value,'string',true,false);
            obj.ZoneID = value;
        end
    end

    methods (Hidden, Access = {?matlab.wsdl.internal.WsdlObject,?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function validate(obj)
        % Test for required fields
            arrayfun(@(x) x.checkFields({},{},{}), obj);
        end
    end

    methods (Hidden, Access = protected)
        function jobj = getOneObj(obj)
        % Return the Java object corresponding to this object.  Intended
        % to be invoked from superclass.
            obj.validate
            import matlab.wsdl.internal.fromMATLAB
            jobj = neplanservice.ExternalProject;  % create empty Java object
            % populate fields of object
            jobj.setAngleXY(fromMATLAB({'ExternalProject','AngleXY'},obj.AngleXY,'double',true));
            jobj.setAreaID(fromMATLAB({'ExternalProject','AreaID'},obj.AreaID,'string',true));
            jobj.setCalcNameID(fromMATLAB({'ExternalProject','CalcNameID'},obj.CalcNameID,'string',true));
            jobj.setCoordinateUnits(fromMATLAB({'ExternalProject','CoordinateUnits'},obj.CoordinateUnits,'int',true));
            jobj.setDiagramID(fromMATLAB({'ExternalProject','DiagramID'},obj.DiagramID,'string',true));
            jobj.setDirectionUpY(fromMATLAB({'ExternalProject','DirectionUpY'},obj.DirectionUpY,'boolean',true));
            jobj.setFactorXY(fromMATLAB({'ExternalProject','FactorXY'},obj.FactorXY,'double',true));
            jobj.setGraphicLayerID(fromMATLAB({'ExternalProject','GraphicLayerID'},obj.GraphicLayerID,'string',true));
            jobj.setGroupID(fromMATLAB({'ExternalProject','GroupID'},obj.GroupID,'string',true));
            jobj.setImportWithGraphic(fromMATLAB({'ExternalProject','ImportWithGraphic'},obj.ImportWithGraphic,'boolean',true));
            jobj.setInfo(fromMATLAB({'ExternalProject','Info'},obj.Info,'string',true));
            jobj.setLayerMinX(fromMATLAB({'ExternalProject','LayerMinX'},obj.LayerMinX,'double',true));
            jobj.setLayerMinY(fromMATLAB({'ExternalProject','LayerMinY'},obj.LayerMinY,'double',true));
            jobj.setLayerUnitXY(fromMATLAB({'ExternalProject','LayerUnitXY'},obj.LayerUnitXY,'short',true));
            jobj.setLibraryName(fromMATLAB({'ExternalProject','LibraryName'},obj.LibraryName,'string',true));
            jobj.setLibrarySubname(fromMATLAB({'ExternalProject','LibrarySubname'},obj.LibrarySubname,'string',true));
            jobj.setLogName(fromMATLAB({'ExternalProject','LogName'},obj.LogName,'string',true));
            jobj.setNumDiagram(fromMATLAB({'ExternalProject','NumDiagram'},obj.NumDiagram,'int',true));
            jobj.setNumGraphic(fromMATLAB({'ExternalProject','NumGraphic'},obj.NumGraphic,'int',true));
            jobj.setProjectID(fromMATLAB({'ExternalProject','ProjectID'},obj.ProjectID,'string',true));
            jobj.setProjectName(fromMATLAB({'ExternalProject','ProjectName'},obj.ProjectName,'string',true));
            jobj.setReturnCode(fromMATLAB({'ExternalProject','ReturnCode'},obj.ReturnCode,'int',true));
            jobj.setSridID(fromMATLAB({'ExternalProject','SridID'},obj.SridID,'string',true));
            jobj.setSubAreaID(fromMATLAB({'ExternalProject','SubAreaID'},obj.SubAreaID,'string',true));
            jobj.setVariantID(fromMATLAB({'ExternalProject','VariantID'},obj.VariantID,'string',true));
            jobj.setVersion(fromMATLAB({'ExternalProject','Version'},obj.Version,'double',true));
            jobj.setWorldCoordMaxX(fromMATLAB({'ExternalProject','WorldCoordMaxX'},obj.WorldCoordMaxX,'double',true));
            jobj.setWorldCoordMaxY(fromMATLAB({'ExternalProject','WorldCoordMaxY'},obj.WorldCoordMaxY,'double',true));
            jobj.setWorldCoordMinX(fromMATLAB({'ExternalProject','WorldCoordMinX'},obj.WorldCoordMinX,'double',true));
            jobj.setWorldCoordMinY(fromMATLAB({'ExternalProject','WorldCoordMinY'},obj.WorldCoordMinY,'double',true));
            jobj.setZoneID(fromMATLAB({'ExternalProject','ZoneID'},obj.ZoneID,'string',true));
        end
    end

    methods (Static, Hidden, Access = {?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function obj = getInstance(jobj, isArray) 
        % Return a ExternalProject object constructed from the Java object jobj.
        % If isArray, jobj is java.util.List of objects and we'll return array.
            if nargin == 0 || isempty(jobj)
                obj = [];
                return
            end
            if nargin > 1 && isArray
                for i = jobj.size : -1 : 1
                    value = wsdl.neplanservice.ExternalProject.getInstance(jobj.get(i-1));
                    if ~isempty(value) 
                        obj(i,1) = value;
                    end
                end
                if ~exist('obj','var')
                    obj = [];
                end
            else
                import matlab.wsdl.internal.toMATLAB
                obj = wsdl.neplanservice.ExternalProject( ...
                    toMATLAB(jobj.getAngleXY,'double',false), ...
                    toMATLAB(jobj.getAreaID,'string',false), ...
                    toMATLAB(jobj.getCalcNameID,'string',false), ...
                    toMATLAB(jobj.getCoordinateUnits,'int',false), ...
                    toMATLAB(jobj.getDiagramID,'string',false), ...
                    toMATLAB(jobj.isDirectionUpY,'boolean',false), ...
                    toMATLAB(jobj.getFactorXY,'double',false), ...
                    toMATLAB(jobj.getGraphicLayerID,'string',false), ...
                    toMATLAB(jobj.getGroupID,'string',false), ...
                    toMATLAB(jobj.isImportWithGraphic,'boolean',false), ...
                    toMATLAB(jobj.getInfo,'string',false), ...
                    toMATLAB(jobj.getLayerMinX,'double',false), ...
                    toMATLAB(jobj.getLayerMinY,'double',false), ...
                    toMATLAB(jobj.getLayerUnitXY,'short',false), ...
                    toMATLAB(jobj.getLibraryName,'string',false), ...
                    toMATLAB(jobj.getLibrarySubname,'string',false), ...
                    toMATLAB(jobj.getLogName,'string',false), ...
                    toMATLAB(jobj.getNumDiagram,'int',false), ...
                    toMATLAB(jobj.getNumGraphic,'int',false), ...
                    toMATLAB(jobj.getProjectID,'string',false), ...
                    toMATLAB(jobj.getProjectName,'string',false), ...
                    toMATLAB(jobj.getReturnCode,'int',false), ...
                    toMATLAB(jobj.getSridID,'string',false), ...
                    toMATLAB(jobj.getSubAreaID,'string',false), ...
                    toMATLAB(jobj.getVariantID,'string',false), ...
                    toMATLAB(jobj.getVersion,'double',false), ...
                    toMATLAB(jobj.getWorldCoordMaxX,'double',false), ...
                    toMATLAB(jobj.getWorldCoordMaxY,'double',false), ...
                    toMATLAB(jobj.getWorldCoordMinX,'double',false), ...
                    toMATLAB(jobj.getWorldCoordMinY,'double',false), ...
                    toMATLAB(jobj.getZoneID,'string',false));
            end
        end
    end
end
