classdef NeplanServiceConnectionInfo < matlab.wsdl.internal.WsdlObject
    % NeplanServiceConnectionInfo(ConnectionStatus,CoordinateX,CoordinateY,Elem_Connection_ID,Elem_ID,Elem_Name,ElementType,MPRN,Phases)  NeplanServiceConnectionInfo object for use with <a href="matlab:doc NeplanService">NeplanService</a> web client
    %
    %     ConnectionStatus - string
    %     CoordinateX - string
    %     CoordinateY - string
    %     Elem_Connection_ID - string
    %     Elem_ID - string
    %     Elem_Name - string
    %     ElementType - string
    %     MPRN - string
    %     Phases - string
    %
    % To create a NeplanServiceConnectionInfo, use <a href="matlab:doc NeplanService.getNeplanServiceConnectionInfo">NeplanService.getNeplanServiceConnectionInfo</a>.
    %
    %
    % See also <a href="matlab:doc NeplanService">NeplanService</a>.
    
    % This file generated by matlab.wsdl.createWSDLClient at 07-Jan-2018 16:39:55
    % from https://demo.neplan.ch/NEPLAN360_Demo/Services/External/NeplanService.svc?singleWsdl.  
    % Please do not alter this file.
    properties 
        ConnectionStatus
        CoordinateX
        CoordinateY
        Elem_Connection_ID
        Elem_ID
        Elem_Name
        ElementType
        MPRN
        Phases
    end
    
    methods
        function obj = NeplanServiceConnectionInfo(ConnectionStatus,CoordinateX,CoordinateY,Elem_Connection_ID,Elem_ID,Elem_Name,ElementType,MPRN,Phases)
            if nargin == 0, return, end
            if nargin > 0
                obj.ConnectionStatus = ConnectionStatus;
            end
            if nargin > 1
                obj.CoordinateX = CoordinateX;
            end
            if nargin > 2
                obj.CoordinateY = CoordinateY;
            end
            if nargin > 3
                obj.Elem_Connection_ID = Elem_Connection_ID;
            end
            if nargin > 4
                obj.Elem_ID = Elem_ID;
            end
            if nargin > 5
                obj.Elem_Name = Elem_Name;
            end
            if nargin > 6
                obj.ElementType = ElementType;
            end
            if nargin > 7
                obj.MPRN = MPRN;
            end
            if nargin > 8
                obj.Phases = Phases;
            end
        end
        function obj = set.ConnectionStatus(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','ConnectionStatus'},value,'string',true,false);
            obj.ConnectionStatus = value;
        end        

        function obj = set.CoordinateX(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','CoordinateX'},value,'string',true,false);
            obj.CoordinateX = value;
        end        

        function obj = set.CoordinateY(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','CoordinateY'},value,'string',true,false);
            obj.CoordinateY = value;
        end        

        function obj = set.Elem_Connection_ID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','Elem_Connection_ID'},value,'string',true,false);
            obj.Elem_Connection_ID = value;
        end        

        function obj = set.Elem_ID(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','Elem_ID'},value,'string',true,false);
            obj.Elem_ID = value;
        end        

        function obj = set.Elem_Name(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','Elem_Name'},value,'string',true,false);
            obj.Elem_Name = value;
        end        

        function obj = set.ElementType(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','ElementType'},value,'string',true,false);
            obj.ElementType = value;
        end        

        function obj = set.MPRN(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','MPRN'},value,'string',true,false);
            obj.MPRN = value;
        end        

        function obj = set.Phases(obj, value)
            matlab.wsdl.internal.fromMATLAB({'NeplanServiceConnectionInfo','Phases'},value,'string',true,false);
            obj.Phases = value;
        end
    end

    methods (Hidden, Access = {?matlab.wsdl.internal.WsdlObject,?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function validate(obj)
        % Test for required fields
            arrayfun(@(x) x.checkFields({},{},{}), obj);
        end
    end

    methods (Hidden, Access = protected)
        function jobj = getOneObj(obj)
        % Return the Java object corresponding to this object.  Intended
        % to be invoked from superclass.
            obj.validate
            import matlab.wsdl.internal.fromMATLAB
            jobj = neplanservice.NeplanServiceConnectionInfo;  % create empty Java object
            % populate fields of object
            jobj.setConnectionStatus(fromMATLAB({'NeplanServiceConnectionInfo','ConnectionStatus'},obj.ConnectionStatus,'string',true));
            jobj.setCoordinateX(fromMATLAB({'NeplanServiceConnectionInfo','CoordinateX'},obj.CoordinateX,'string',true));
            jobj.setCoordinateY(fromMATLAB({'NeplanServiceConnectionInfo','CoordinateY'},obj.CoordinateY,'string',true));
            jobj.setElem_Connection_ID(fromMATLAB({'NeplanServiceConnectionInfo','Elem_Connection_ID'},obj.Elem_Connection_ID,'string',true));
            jobj.setElem_ID(fromMATLAB({'NeplanServiceConnectionInfo','Elem_ID'},obj.Elem_ID,'string',true));
            jobj.setElem_Name(fromMATLAB({'NeplanServiceConnectionInfo','Elem_Name'},obj.Elem_Name,'string',true));
            jobj.setElementType(fromMATLAB({'NeplanServiceConnectionInfo','ElementType'},obj.ElementType,'string',true));
            jobj.setMPRN(fromMATLAB({'NeplanServiceConnectionInfo','MPRN'},obj.MPRN,'string',true));
            jobj.setPhases(fromMATLAB({'NeplanServiceConnectionInfo','Phases'},obj.Phases,'string',true));
        end
    end

    methods (Static, Hidden, Access = {?NeplanService,?matlab.wsdl.internal.WsdlObject,?wsdl.neplanservice.ExternalProject,?wsdl.neplanservice.ArrayOfdouble,?wsdl.neplanservice.LoadData,?wsdl.neplanservice.string,?wsdl.neplanservice.ArrayOfImportElementItem,?wsdl.neplanservice.ArrayOfLoadData,?wsdl.neplanservice.ArrayOfstring,?wsdl.neplanservice.ArrayOfNeplanServiceElementResult,?wsdl.neplanservice.AnalysisParameterSettings,?wsdl.neplanservice.AnalysisReturnInfo,?wsdl.neplanservice.ArrayOfImportFeederItem,?wsdl.neplanservice.base64Binary,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringstring,?wsdl.neplanservice.ArrayOfKeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.ArrayOfNeplanServiceLoadGenerationInfo,?wsdl.neplanservice.ArrayOfguid,?wsdl.neplanservice.NeplanDomainServiceImportReturnInfo,?wsdl.neplanservice.ImportElementItem,?wsdl.neplanservice.ArrayOfTechDataValue,?wsdl.neplanservice.WaterLoadData,?wsdl.neplanservice.ArrayOfLineSectionData,?wsdl.neplanservice.TechDataValue,?wsdl.neplanservice.ImportFeederItem,?wsdl.neplanservice.NeplanServiceElementResult,?wsdl.neplanservice.NeplanServiceLoadGenerationInfo,?wsdl.neplanservice.KeyValuePairOfstringstring,?wsdl.neplanservice.KeyValuePairOfstringNeplanServiceConnectionInfomHiA0HHi,?wsdl.neplanservice.NeplanServiceConnectionInfo,?wsdl.neplanservice.LineSectionData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.ArrayOfAnalysisReturnInfoRelayResultData,?wsdl.neplanservice.AnalysisReturnInfoCableSizingLineData,?wsdl.neplanservice.AnalysisReturnInfoRelayResultData})
        function obj = getInstance(jobj, isArray) 
        % Return a NeplanServiceConnectionInfo object constructed from the Java object jobj.
        % If isArray, jobj is java.util.List of objects and we'll return array.
            if nargin == 0 || isempty(jobj)
                obj = [];
                return
            end
            if nargin > 1 && isArray
                for i = jobj.size : -1 : 1
                    value = wsdl.neplanservice.NeplanServiceConnectionInfo.getInstance(jobj.get(i-1));
                    if ~isempty(value) 
                        obj(i,1) = value;
                    end
                end
                if ~exist('obj','var')
                    obj = [];
                end
            else
                import matlab.wsdl.internal.toMATLAB
                obj = wsdl.neplanservice.NeplanServiceConnectionInfo( ...
                    toMATLAB(jobj.getConnectionStatus,'string',false), ...
                    toMATLAB(jobj.getCoordinateX,'string',false), ...
                    toMATLAB(jobj.getCoordinateY,'string',false), ...
                    toMATLAB(jobj.getElem_Connection_ID,'string',false), ...
                    toMATLAB(jobj.getElem_ID,'string',false), ...
                    toMATLAB(jobj.getElem_Name,'string',false), ...
                    toMATLAB(jobj.getElementType,'string',false), ...
                    toMATLAB(jobj.getMPRN,'string',false), ...
                    toMATLAB(jobj.getPhases,'string',false));
            end
        end
    end
end
